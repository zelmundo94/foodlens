{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketterdk\\\\Documents\\\\GitHub\\\\deployed-foodlens\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Camera, { IMAGE_TYPES, FACING_MODES } from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"./App.css\";\nimport \"./Camera.css\";\nimport \"./Emojicon\";\nimport Modal from \"./Modal\";\nimport AddRecipeButton from \"./Components/Recipes\";\nimport AnotherRecipeButton from \"./Components/Recipes\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [{\n        id: 'pompano',\n        title: 'fried pompano'\n      }],\n      displayRecipes: false\n    };\n\n    this.triggerRecipeState = () => {\n      this.setState({\n        displayRecipes: !this.state.displayRecipes\n      });\n    };\n\n    this.showCamera = e => {\n      this.setState({\n        cameraOn: true,\n        image: false,\n        loading: false,\n        fishclass: \"\",\n        confidence: \"\",\n        dataUri: \"\",\n        key: \"\"\n      });\n    };\n\n    this.handleShowDialog = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      console.log(\"clicked\");\n    };\n\n    this.handleUpload = event => {\n      if (this.uploadInput.files[0]) {\n        let file = this.uploadInput.files[0];\n        this.getBase64(file, result => {\n          fetch(\n          /* S3 endpoint here */\n          \"https://50xlesnkqe.execute-api.us-east-1.amazonaws.com/foodLens-deploy1/index\", {\n            method: \"POST\",\n            headers: {//\"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n              //'Access-Control-Allow-Origin': \"*\"\n            },\n            body: JSON.stringify({\n              payload: result.split(\",\")[1]\n            })\n          }).then(response => response.json()).then(data => {\n            console.log(\"tmp: \", data);\n            this.setState({\n              result: data,\n              cameraOn: false,\n              image: true,\n              dataUri: result,\n              loading: true,\n              isOpen: true,\n              message: \"UPLOAD AN IMAGE\"\n            });\n          }).catch(err => console.log(err));\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.handleChange = e => {\n      if (this.uploadInput.files[0]) {\n        let file = this.uploadInput.files[0];\n        this.getBase64(file, result => {\n          this.setState({\n            dataUri: result,\n            cameraOn: false,\n            image: true,\n            prediction: false\n          });\n        });\n      }\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.displayResults = () => {\n      let popArray = [];\n      popArray.push(React.createElement(\"ol\", {\n        className: \"information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Name: \", this.state.result.name), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Size: \", this.state.result.size), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Habitat: \", this.state.result.habitat, \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Weight: \", this.state.result.weight), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Ethnicity: \", this.state.result.ethnicity)));\n      return popArray;\n    };\n\n    this.state = {\n      idealFacingMode: FACING_MODES.USER,\n      myArray: [],\n      fishclass: \"\",\n      loading: false,\n      cameraOn: true,\n      image: false,\n      key: \"\",\n      upload: false,\n      dataUri: \"\",\n      prediction: false,\n      isOpen: false,\n      isEmptyState: true\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n  }\n\n  onTakePhoto(dataUri) {\n    const savedImage = dataUri.split(\",\")[1];\n    fetch(\n    /* API endpoint here */\n    \"https://50xlesnkqe.execute-api.us-east-1.amazonaws.com/foodLens-deploy1/index\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        payload: savedImage\n      })\n    }).then(response => response.json()).then(data => this.setState({\n      savedImage: data,\n      cameraOn: false,\n      loading: true,\n      dataUri: savedImage\n    })).catch(err => console.log(err));\n  }\n\n  changeCameraType() {\n    if (this.state.idealFacingMode === FACING_MODES.ENVIRONMENT) {\n      this.setState({\n        idealFacingMode: FACING_MODES.USER,\n        isImageMirror: true\n      });\n    } else {\n      this.setState({\n        idealFacingMode: FACING_MODES.ENVIRONMENT,\n        isImageMirror: false\n      });\n    }\n  } // displayResults = () => {\n  //   let popArray = [];\n  //   for (let key in this.state.result) {\n  //     popArray.push(\n  //       <p key={key} className=\"information\">\n  //         {key}: {this.state.result[key]}\n  //       </p>\n  //     );\n  //   }\n  //   return popArray;\n  // };\n\n\n  /*test*/\n  render() {\n    if (this.state.displayRecipes) {\n      recipes = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.recipes.map((recipe, index) => {\n        return React.createElement(AnotherRecipeButton, {\n          key: recipe.id,\n          title: recipe.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"bg-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.displayRecipes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"View Recipes\"), recipes), React.createElement(\"div\", {\n      className: \"wizard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"FOODLENS \\uD83E\\uDDD0\"), this.state.loading ? React.createElement(Loader, {\n      type: \"Grid\",\n      color: \"#008080\",\n      height: \"80\",\n      width: \"80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }) : null, this.state.image ? React.createElement(\"div\", {\n      className: \"prediction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"fishImg\",\n      src: this.state.dataUri,\n      alt: \"uploaded pic of fish\",\n      onClick: this.handleShowDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), this.state.prediction ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, parseFloat(this.state.confidence) > 85 ? React.createElement(\"div\", {\n      className: \"prediction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"We were unable to identify this fish. Please try again.\")), React.createElement(\"button\", {\n      className: \"openCamera\",\n      onClick: this.showCamera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Wanna take more photos?\")) : null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.result !== undefined ? this.displayResults() : \"\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.payload)), React.createElement(\"button\", {\n      className: \"openCamera\",\n      onClick: this.showCamera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Take another photo!\")) : null, this.state.cameraOn ? React.createElement(\"div\", {\n      className: \"camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Camera, {\n      imageType: IMAGE_TYPES.JPG,\n      idealFacingMode: this.state.idealFacingMode,\n      isImageMirror: this.state.isImageMirror,\n      idealResolution: {\n        width: 640,\n        height: 1440\n      },\n      onTakePhoto: dataUri => {\n        this.onTakePhoto(dataUri);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.changeCameraType.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"[SWITCH]\")) : null, this.state.loading ? null : React.createElement(\"div\", {\n      className: \"uploader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"inputfile\",\n      id: \"inputfile\",\n      name: \"input\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.handleChange,\n      type: \"file\",\n      accept: \"image/jpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"SELECT \", React.createElement(\"span\", {\n      role: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"uploadButton\",\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"DETECT\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ketterdk\\Documents\\GitHub\\deployed-foodlens\\src\\App.js"],"names":["React","Component","Camera","IMAGE_TYPES","FACING_MODES","Loader","Modal","AddRecipeButton","AnotherRecipeButton","App","constructor","props","state","recipes","id","title","displayRecipes","triggerRecipeState","setState","showCamera","e","cameraOn","image","loading","fishclass","confidence","dataUri","key","handleShowDialog","isOpen","console","log","handleUpload","event","uploadInput","files","file","getBase64","result","fetch","method","headers","body","JSON","stringify","payload","split","then","response","json","data","message","catch","err","handleChange","prediction","toggleModal","displayResults","popArray","push","name","size","habitat","weight","ethnicity","idealFacingMode","USER","myArray","upload","isEmptyState","cb","reader","FileReader","readAsDataURL","onload","onerror","error","onTakePhoto","savedImage","changeCameraType","ENVIRONMENT","isImageMirror","render","map","recipe","index","parseFloat","undefined","JPG","width","height","bind","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Camera, { IMAGE_TYPES, FACING_MODES } from \"react-html5-camera-photo\";\r\nimport \"react-html5-camera-photo/build/css/index.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./App.css\";\r\nimport \"./Camera.css\";\r\nimport \"./Emojicon\";\r\nimport Modal from \"./Modal\";\r\nimport AddRecipeButton from \"./Components/Recipes\";\r\nimport AnotherRecipeButton from \"./Components/Recipes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idealFacingMode: FACING_MODES.USER, \r\n      myArray: [],\r\n      fishclass: \"\",\r\n      loading: false,\r\n      cameraOn: true,\r\n      image: false,\r\n      key: \"\",\r\n      upload: false,\r\n      dataUri: \"\",\r\n      prediction: false,\r\n      isOpen: false,\r\n      isEmptyState: true,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    recipes: [\r\n      { id: 'pompano', title: 'fried pompano' },\r\n    ],\r\n    \r\n    displayRecipes: false\r\n  }\r\n\r\n  triggerRecipeState = () => {\r\n    this.setState({\r\n        displayRecipes: !this.state.displayRecipes\r\n    })\r\n}\r\n\r\n\r\n\r\n  getBase64(file, cb) {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function() {\r\n      cb(reader.result);\r\n    };\r\n    reader.onerror = function(error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n  }\r\n\r\n  showCamera = e => {\r\n    this.setState({\r\n      cameraOn: true,\r\n      image: false,\r\n      loading: false,\r\n      fishclass: \"\",\r\n      confidence: \"\",\r\n      dataUri: \"\",\r\n      key: \"\"\r\n    });\r\n  };\r\n\r\n  onTakePhoto(dataUri) {\r\n    const savedImage = dataUri.split(\",\")[1];\r\n    fetch(\r\n      /* API endpoint here */ \"https://50xlesnkqe.execute-api.us-east-1.amazonaws.com/foodLens-deploy1/index\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ payload: savedImage })\r\n      }\r\n    )\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          savedImage: data,\r\n          cameraOn: false,\r\n          loading: true,\r\n          dataUri: savedImage\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleShowDialog = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n\r\n  handleUpload = event => {\r\n    if (this.uploadInput.files[0]) {\r\n      let file = this.uploadInput.files[0];\r\n      this.getBase64(file, result => {\r\n        fetch(\r\n          /* S3 endpoint here */ \"https://50xlesnkqe.execute-api.us-east-1.amazonaws.com/foodLens-deploy1/index\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              //\"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n              //'Access-Control-Allow-Origin': \"*\"\r\n            },\r\n            body: JSON.stringify({ payload: result.split(\",\")[1] })\r\n          }\r\n        )\r\n          .then(response => response.json())\r\n          .then(data => {\r\n        \r\n            console.log(\"tmp: \", data);\r\n          \r\n\r\n            this.setState({\r\n              result: data,\r\n              cameraOn: false,\r\n              image: true,\r\n              dataUri: result,\r\n              loading: true,\r\n              isOpen: true,\r\n              message: \"UPLOAD AN IMAGE\"\r\n            });\r\n          })\r\n          .catch(err => console.log(err));\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  handleChange = e => {\r\n    if (this.uploadInput.files[0]) {\r\n      let file = this.uploadInput.files[0];\r\n      this.getBase64(file, result => {\r\n        this.setState({\r\n          dataUri: result,\r\n          cameraOn: false,\r\n          image: true,\r\n          prediction: false\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  changeCameraType() {\r\n    if (this.state.idealFacingMode === FACING_MODES.ENVIRONMENT) {\r\n      this.setState({\r\n        idealFacingMode: FACING_MODES.USER,\r\n        isImageMirror: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        idealFacingMode: FACING_MODES.ENVIRONMENT,\r\n        isImageMirror: false\r\n      });\r\n    }\r\n  }\r\n\r\n  // displayResults = () => {\r\n  //   let popArray = [];\r\n  //   for (let key in this.state.result) {\r\n  //     popArray.push(\r\n  //       <p key={key} className=\"information\">\r\n  //         {key}: {this.state.result[key]}\r\n  //       </p>\r\n  //     );\r\n  //   }\r\n  //   return popArray;\r\n  // };\r\n\r\n  displayResults = () => {\r\n    let popArray = [];\r\n    popArray.push(\r\n      <ol className=\"information\">\r\n       <li>Name: {this.state.result.name}</li>\r\n       <li>Size: {this.state.result.size}</li>\r\n       <li>Habitat: {this.state.result.habitat} </li>\r\n       <li>Weight: {this.state.result.weight}</li>\r\n       <li>Ethnicity: {this.state.result.ethnicity}</li>\r\n      </ol>\r\n    );\r\n    return popArray;\r\n  };\r\n\r\n  /*test*/\r\n  render() {\r\n\r\n    if ( this.state.displayRecipes ) {\r\n      recipes = (\r\n      <div>\r\n           { this.state.recipes.map((recipe, index) => {\r\n                return <AnotherRecipeButton key={recipe.id}\r\n                title={recipe.title} />\r\n           }) }\r\n      </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"bg-image\">\r\n      <div className=\"App\">\r\n        <div>\r\n\r\n        {/* <AddRecipeButton viewRecipe={this.triggerRecipeState} />\r\n        {this.state.isEmptyState && <AddRecipeButton viewRecipe={this.triggerRecipeState} />}\r\n        {this.state.isAddRecipeState && <AnotherComponent />} */}\r\n        <button onClick={this.displayRecipes}>View Recipes\r\n        </button>\r\n        {recipes}\r\n\r\n\r\n        </div>\r\n       \r\n        {/* <button onClick={this.toggleModal}>\r\n          Open the modal\r\n        </button> */}\r\n          <div className=\"wizard\">\r\n            <h1>FOODLENS 🧐</h1>\r\n            {/*  {this.state.loading\r\n              ? setTimeout(() => {\r\n                  this.predictFish(  invoke endpoint URL\r\n                    \"\",\r\n                    {\r\n                      //method: \"POST\",\r\n                      headers: {\r\n                        //\"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n                        //'Access-Control-Allow-Origin': \"*\"\r\n                      },\r\n                       body: JSON.stringify({\r\n                        url:\r\n                         \"\" +\r\n                          this.state.key\r\n                      })\r\n                    }\r\n                  );\r\n                }, 2500)\r\n              : null} */}\r\n            {this.state.loading ? (\r\n              <Loader type=\"Grid\" color=\"#008080\" height=\"80\" width=\"80\" />\r\n            ) : null}\r\n            {this.state.image ? (\r\n              <div className=\"prediction\">\r\n                <img\r\n                  className=\"fishImg\"\r\n                  src={this.state.dataUri}\r\n                  alt=\"uploaded pic of fish\"\r\n                  onClick={this.handleShowDialog}\r\n                />\r\n                {this.state.prediction ? (\r\n                  <div>\r\n                    {parseFloat(this.state.confidence) > 85 ? (\r\n                      <div className=\"prediction\">\r\n                        <p>\r\n                          {/* This is a <span>{this.state.result}</span>  */}\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <p>\r\n                          We were unable to identify this fish. Please try\r\n                          again.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                    <button className=\"openCamera\" onClick={this.showCamera}>\r\n                      Wanna take more photos?\r\n                    </button>\r\n                  </div>\r\n                ) : null}\r\n                <div>\r\n                  {/* This is a {\" \"} */}\r\n                  <Modal show={this.state.isOpen} onClose={this.toggleModal}>\r\n                    {this.state.result !== undefined\r\n                      ? this.displayResults()\r\n                      : \"\"}\r\n                  </Modal>\r\n                  <span>{this.state.payload}</span>\r\n                </div>\r\n                <button className=\"openCamera\" onClick={this.showCamera}>\r\n                  Take another photo!\r\n                </button>\r\n\r\n              </div>\r\n            ) : null}\r\n            {this.state.cameraOn ? (\r\n              <div className=\"camera\">\r\n                <Camera\r\n                  imageType={IMAGE_TYPES.JPG}\r\n                  idealFacingMode={this.state.idealFacingMode} \r\n                  isImageMirror={this.state.isImageMirror}\r\n                  idealResolution={{ width: 640, height: 1440 }}\r\n                  onTakePhoto={dataUri => {\r\n                    this.onTakePhoto(dataUri);\r\n                  }}\r\n                />\r\n                <button onClick={this.changeCameraType.bind(this)}>\r\n            [SWITCH]</button>\r\n              </div>\r\n            ) : null}\r\n            {this.state.loading ? null : (\r\n              <div className=\"uploader\">\r\n                <input\r\n                  className=\"inputfile\"\r\n                  id=\"inputfile\"\r\n                  name=\"input\"\r\n                  ref={ref => {\r\n                    this.uploadInput = ref;\r\n                  }}\r\n                  onChange={this.handleChange}\r\n                  type=\"file\"\r\n                  accept=\"image/jpeg\"\r\n                />\r\n                <label htmlFor=\"inputfile\">\r\n                  SELECT <span role=\"img\" />\r\n                </label>\r\n                <button className=\"uploadButton\" onClick={this.handleUpload}>\r\n                  DETECT\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}